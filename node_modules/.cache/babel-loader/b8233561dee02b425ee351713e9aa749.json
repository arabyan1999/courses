{"ast":null,"code":"import { ADDCATEGORIES, ADDDATA } from './action';\nlet globalState = {\n  cats: [],\n  categories: []\n};\nexport default function reducer(state = globalState, action) {\n  let table = [...state.array]; // let cart = [...state.cart]\n\n  let filteredArray = table.filter(a => a.id !== action.id);\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      console.log(action);\n      const foundTable = table.find(item => item.id === parseInt(action.id));\n      foundTable && (foundTable.count = foundTable.count + 1);\n      return { // array\n        // element: state[element]\n        ...state,\n        array: table\n      };\n\n    case \"REMOVE\":\n      return { ...state,\n        array: filteredArray\n      };\n\n    case ADDCATEGORIES:\n      console.log(action);\n      return { ...state,\n        categories: action.data\n      };\n\n    case ADDDATA:\n      return { ...state,\n        cats: action.catData\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/exio/Documents/Project/cats/src/store/reducer.ts"],"names":["ADDCATEGORIES","ADDDATA","globalState","cats","categories","reducer","state","action","table","array","filteredArray","filter","a","id","type","console","log","foundTable","find","item","parseInt","count","data","catData"],"mappings":"AAQA,SAASA,aAAT,EAAwBC,OAAxB,QAAkD,UAAlD;AAEA,IAAIC,WAAgB,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAAvB;AAKA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGJ,WAAzB,EAAsCK,MAAtC,EAAmD;AAC9D,MAAIC,KAAK,GAAG,CAAC,GAAGF,KAAK,CAACG,KAAV,CAAZ,CAD8D,CAE9D;;AACA,MAAIC,aAAa,GAAGF,KAAK,CAACG,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACM,EAAlC,CAApB;;AACA,UAAQN,MAAM,CAACO,IAAf;AACI,SAAK,WAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACA,YAAMU,UAAU,GAAGT,KAAK,CAACU,IAAN,CAAWC,IAAI,IAAKA,IAAI,CAACN,EAAN,KAAcO,QAAQ,CAACb,MAAM,CAACM,EAAR,CAAzC,CAAnB;AACAI,MAAAA,UAAU,KAAKA,UAAU,CAACI,KAAX,GAAmBJ,UAAU,CAACI,KAAX,GAAmB,CAA3C,CAAV;AACA,aAAO,EACH;AACA;AACA,WAAGf,KAHA;AAIHG,QAAAA,KAAK,EAAED;AAJJ,OAAP;;AAMJ,SAAK,QAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,KAAK,EAAEC;AAFJ,OAAP;;AAIJ,SAAKV,aAAL;AACIe,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACA,aAAO,EACH,GAAGD,KADA;AAEHF,QAAAA,UAAU,EAAEG,MAAM,CAACe;AAFhB,OAAP;;AAIJ,SAAKrB,OAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHH,QAAAA,IAAI,EAAEI,MAAM,CAACgB;AAFV,OAAP;;AAIJ;AACI,aAAOjB,KAAP;AA5BR;AA8BH","sourcesContent":["import img1 from '../images/img1.jpg'\nimport img6 from '../images/img2.jpeg'\nimport img3 from '../images/img3.jpg'\nimport img4 from '../images/img4.jpeg'\nimport img5 from '../images/img5.jpg'\nimport img2 from '../images/img6.jpg'\nimport img7 from '../images/img7.png'\nimport img8 from '../images/img8.jpg'\nimport { ADDCATEGORIES, ADDDATA, ADDTOCART } from './action'\n\nlet globalState: any = {\n    cats: [],\n    categories: []\n}\n\nexport default function reducer(state = globalState, action: any) {\n    let table = [...state.array]\n    // let cart = [...state.cart]\n    let filteredArray = table.filter(a => a.id !== action.id)\n    switch (action.type) {\n        case \"INCREMENT\":\n            console.log(action);\n            const foundTable = table.find(item => (item.id) === parseInt(action.id))\n            foundTable && (foundTable.count = foundTable.count + 1)\n            return {\n                // array\n                // element: state[element]\n                ...state,\n                array: table\n            }\n        case \"REMOVE\":\n            return {\n                ...state,\n                array: filteredArray\n            }\n        case ADDCATEGORIES:\n            console.log(action)\n            return {\n                ...state,\n                categories: action.data\n            }\n        case ADDDATA:\n            return {\n                ...state,\n                cats: action.catData\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}