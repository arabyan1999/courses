{"ast":null,"code":"import img1 from '../images/img1.jpg';\nimport img6 from '../images/img2.jpeg';\nimport img3 from '../images/img3.jpg';\nimport img4 from '../images/img4.jpeg';\nimport img5 from '../images/img5.jpg';\nimport img2 from '../images/img6.jpg';\nimport img7 from '../images/img7.png';\nimport img8 from '../images/img8.jpg';\nimport { ADDTOCART } from './action';\nlet globalState = {\n  array: [{\n    id: 1,\n    name: \"Gold1\",\n    price: \"1000\",\n    description: \"\",\n    image: img1,\n    count: 10\n  }, {\n    id: 2,\n    name: \"Gold2\",\n    price: \"2000\",\n    description: \"\",\n    image: img2,\n    count: 10\n  }, {\n    id: 3,\n    name: \"Gold3\",\n    price: \"3000\",\n    description: \"\",\n    image: img3,\n    count: 10\n  }, {\n    id: 4,\n    name: \"Gold4\",\n    price: \"4000\",\n    description: \"\",\n    image: img4,\n    count: 10\n  }, {\n    id: 5,\n    name: \"Gold5\",\n    price: \"5000\",\n    description: \"\",\n    image: img5,\n    count: 10\n  }, {\n    id: 6,\n    name: \"Gold6\",\n    price: \"4000\",\n    description: \"\",\n    image: img6,\n    count: 10\n  }, {\n    id: 7,\n    name: \"Gold7\",\n    price: \"7000\",\n    description: \"\",\n    image: img7,\n    count: 10\n  }, {\n    id: 8,\n    name: \"Gold8\",\n    price: \"3000\",\n    description: \"\",\n    image: img8,\n    count: 10\n  }],\n  cart: []\n};\nexport default function reducer(state = globalState, action) {\n  console.log(action);\n  let table = [...state.array];\n  let cart = [...state.cart];\n  let filteredArray = table.filter(a => a.id !== action.id);\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      console.log(action);\n      const foundTable = table.find(item => item.id === parseInt(action.id));\n      foundTable && (foundTable.count = foundTable.count + 1);\n      console.log(\"ðŸš€ ~ file: reducer.ts ~ line 90 ~ reducer ~ foundTable\", foundTable);\n      return { // array\n        // element: state[element]\n        ...state,\n        array: table\n      };\n      break;\n\n    case \"REMOVE\":\n      return { ...state,\n        array: filteredArray\n      };\n\n    case ADDTOCART:\n      let foundedObject = table.find(item => item.id === action.delivary.id);\n      console.log(\"ðŸš€ ~ file: reducer.ts ~ line 106 ~ reducer ~ foundedObject\", foundedObject);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/exio/Documents/Project/jewellerymarket/src/store/reducer.ts"],"names":["img1","img6","img3","img4","img5","img2","img7","img8","ADDTOCART","globalState","array","id","name","price","description","image","count","cart","reducer","state","action","console","log","table","filteredArray","filter","a","type","foundTable","find","item","parseInt","foundedObject","delivary"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,IAAIC,WAAW,GAAG;AACdC,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE,MAHX;AAIIC,IAAAA,WAAW,EAAE,EAJjB;AAKIC,IAAAA,KAAK,EAAEf,IALX;AAMIgB,IAAAA,KAAK,EAAE;AANX,GADG,EASH;AACIL,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE,MAHX;AAIIC,IAAAA,WAAW,EAAE,EAJjB;AAKIC,IAAAA,KAAK,EAAEV,IALX;AAMIW,IAAAA,KAAK,EAAE;AANX,GATG,EAiBH;AACIL,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE,MAHX;AAIIC,IAAAA,WAAW,EAAE,EAJjB;AAKIC,IAAAA,KAAK,EAAEb,IALX;AAMIc,IAAAA,KAAK,EAAE;AANX,GAjBG,EAyBH;AACIL,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE,MAHX;AAIIC,IAAAA,WAAW,EAAE,EAJjB;AAKIC,IAAAA,KAAK,EAAEZ,IALX;AAMIa,IAAAA,KAAK,EAAE;AANX,GAzBG,EAiCH;AACIL,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE,MAHX;AAIIC,IAAAA,WAAW,EAAE,EAJjB;AAKIC,IAAAA,KAAK,EAAEX,IALX;AAMIY,IAAAA,KAAK,EAAE;AANX,GAjCG,EAyCH;AACIL,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE,MAHX;AAIIC,IAAAA,WAAW,EAAE,EAJjB;AAKIC,IAAAA,KAAK,EAAEd,IALX;AAMIe,IAAAA,KAAK,EAAE;AANX,GAzCG,EAiDH;AACIL,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE,MAHX;AAIIC,IAAAA,WAAW,EAAE,EAJjB;AAKIC,IAAAA,KAAK,EAAET,IALX;AAMIU,IAAAA,KAAK,EAAE;AANX,GAjDG,EAyDH;AACIL,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,KAAK,EAAE,MAHX;AAIIC,IAAAA,WAAW,EAAE,EAJjB;AAKIC,IAAAA,KAAK,EAAER,IALX;AAMIS,IAAAA,KAAK,EAAE;AANX,GAzDG,CADO;AAmEdC,EAAAA,IAAI,EAAE;AAnEQ,CAAlB;AAsEA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGV,WAAzB,EAAsCW,MAAtC,EAAmD;AAC9DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,MAAIG,KAAK,GAAG,CAAC,GAAGJ,KAAK,CAACT,KAAV,CAAZ;AACA,MAAIO,IAAI,GAAG,CAAC,GAAGE,KAAK,CAACF,IAAV,CAAX;AACA,MAAIO,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACf,EAAF,KAASS,MAAM,CAACT,EAAlC,CAApB;;AACA,UAAQS,MAAM,CAACO,IAAf;AACI,SAAK,WAAL;AACIN,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,YAAMQ,UAAU,GAAGL,KAAK,CAACM,IAAN,CAAWC,IAAI,IAAKA,IAAI,CAACnB,EAAN,KAAcoB,QAAQ,CAACX,MAAM,CAACT,EAAR,CAAzC,CAAnB;AACAiB,MAAAA,UAAU,KAAKA,UAAU,CAACZ,KAAX,GAAmBY,UAAU,CAACZ,KAAX,GAAmB,CAA3C,CAAV;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,wDAAZ,EAAsEM,UAAtE;AACA,aAAO,EACH;AACA;AACA,WAAGT,KAHA;AAIHT,QAAAA,KAAK,EAAEa;AAJJ,OAAP;AAMA;;AACJ,SAAK,QAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEHT,QAAAA,KAAK,EAAEc;AAFJ,OAAP;;AAIJ,SAAKhB,SAAL;AACI,UAAIwB,aAAiB,GAAGT,KAAK,CAACM,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACnB,EAAL,KAAYS,MAAM,CAACa,QAAP,CAAgBtB,EAA/C,CAAxB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ,EAA0EU,aAA1E;AACA,aAAO,EACH,GAAGb;AADA,OAAP;;AAGJ;AACI,aAAOA,KAAP;AAzBR;AA2BH","sourcesContent":["import img1 from '../images/img1.jpg'\nimport img6 from '../images/img2.jpeg'\nimport img3 from '../images/img3.jpg'\nimport img4 from '../images/img4.jpeg'\nimport img5 from '../images/img5.jpg'\nimport img2 from '../images/img6.jpg'\nimport img7 from '../images/img7.png'\nimport img8 from '../images/img8.jpg'\nimport { ADDTOCART } from './action' \n\nlet globalState = {\n    array: [\n        {\n            id: 1,\n            name: \"Gold1\",\n            price: \"1000\",\n            description: \"\",\n            image: img1,\n            count: 10\n        },\n        {\n            id: 2,\n            name: \"Gold2\",\n            price: \"2000\",\n            description: \"\",\n            image: img2,\n            count: 10\n        },\n        {\n            id: 3,\n            name: \"Gold3\",\n            price: \"3000\",\n            description: \"\",\n            image: img3,\n            count: 10\n        },\n        {\n            id: 4,\n            name: \"Gold4\",\n            price: \"4000\",\n            description: \"\",\n            image: img4,\n            count: 10\n        },\n        {\n            id: 5,\n            name: \"Gold5\",\n            price: \"5000\",\n            description: \"\",\n            image: img5,\n            count: 10\n        },\n        {\n            id: 6,\n            name: \"Gold6\",\n            price: \"4000\",\n            description: \"\",\n            image: img6,\n            count: 10\n        },\n        {\n            id: 7,\n            name: \"Gold7\",\n            price: \"7000\",\n            description: \"\",\n            image: img7,\n            count: 10\n        },\n        {\n            id: 8,\n            name: \"Gold8\",\n            price: \"3000\",\n            description: \"\",\n            image: img8,\n            count: 10\n        }\n    ],\n    cart: []\n}\n\nexport default function reducer(state = globalState, action: any) {\n    console.log(action)\n    let table = [...state.array]\n    let cart = [...state.cart]\n    let filteredArray = table.filter(a => a.id !== action.id)\n    switch (action.type) {\n        case \"INCREMENT\":\n            console.log(action);\n            const foundTable = table.find(item => (item.id) === parseInt(action.id))\n            foundTable && (foundTable.count = foundTable.count + 1)\n            console.log(\"ðŸš€ ~ file: reducer.ts ~ line 90 ~ reducer ~ foundTable\", foundTable)\n            return {\n                // array\n                // element: state[element]\n                ...state,\n                array: table\n            }\n            break;\n        case \"REMOVE\":\n            return {\n                ...state,\n                array: filteredArray\n            }\n        case ADDTOCART:\n            let foundedObject:any = table.find(item => item.id === action.delivary.id)\n            console.log(\"ðŸš€ ~ file: reducer.ts ~ line 106 ~ reducer ~ foundedObject\", foundedObject);\n            return {\n                ...state\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}