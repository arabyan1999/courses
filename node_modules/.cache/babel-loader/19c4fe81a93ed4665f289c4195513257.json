{"ast":null,"code":"import img1 from '../images/img1.jpg';\nimport img6 from '../images/img2.jpeg';\nimport img3 from '../images/img3.jpg';\nimport img4 from '../images/img4.jpeg';\nimport img5 from '../images/img5.jpg';\nimport img2 from '../images/img6.jpg';\nimport img7 from '../images/img7.png';\nimport img8 from '../images/img8.jpg';\nimport { ADDCATEGORIES, ADDDATA } from './action';\nlet globalState = {\n  array: [{\n    id: 1,\n    name: \"Gold1\",\n    price: \"1000\",\n    description: \"\",\n    image: img1,\n    count: 10\n  }, {\n    id: 2,\n    name: \"Gold2\",\n    price: \"2000\",\n    description: \"\",\n    image: img2,\n    count: 10\n  }, {\n    id: 3,\n    name: \"Gold3\",\n    price: \"3000\",\n    description: \"\",\n    image: img3,\n    count: 10\n  }, {\n    id: 4,\n    name: \"Gold4\",\n    price: \"4000\",\n    description: \"\",\n    image: img4,\n    count: 10\n  }, {\n    id: 5,\n    name: \"Gold5\",\n    price: \"5000\",\n    description: \"\",\n    image: img5,\n    count: 10\n  }, {\n    id: 6,\n    name: \"Gold6\",\n    price: \"4000\",\n    description: \"\",\n    image: img6,\n    count: 10\n  }, {\n    id: 7,\n    name: \"Gold7\",\n    price: \"7000\",\n    description: \"\",\n    image: img7,\n    count: 10\n  }, {\n    id: 8,\n    name: \"Gold8\",\n    price: \"3000\",\n    description: \"\",\n    image: img8,\n    count: 10\n  }],\n  cats: [],\n  categories: []\n};\nexport default function reducer(state = globalState, action) {\n  let table = [...state.array]; // let cart = [...state.cart]\n\n  let filteredArray = table.filter(a => a.id !== action.id);\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      console.log(action);\n      const foundTable = table.find(item => item.id === parseInt(action.id));\n      foundTable && (foundTable.count = foundTable.count + 1);\n      return { // array\n        // element: state[element]\n        ...state,\n        array: table\n      };\n\n    case \"REMOVE\":\n      return { ...state,\n        array: filteredArray\n      };\n\n    case ADDCATEGORIES:\n      console.log(action);\n      return { ...state,\n        categories: action.data\n      };\n\n    case ADDDATA:\n      return { ...state,\n        cats: action.catData\n      };\n\n    case INCREMENTCATDATA:\n      const catsArray = [...state.cats];\n      catsArray.push(action.data);\n      return { ...state,\n        cats: catsArray\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/exio/Documents/Project/cats/src/store/reducer.ts"],"names":["img1","img6","img3","img4","img5","img2","img7","img8","ADDCATEGORIES","ADDDATA","globalState","array","id","name","price","description","image","count","cats","categories","reducer","state","action","table","filteredArray","filter","a","type","console","log","foundTable","find","item","parseInt","data","catData","INCREMENTCATDATA","catsArray","push"],"mappings":"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","sourcesContent":["import img1 from '../images/img1.jpg'\nimport img6 from '../images/img2.jpeg'\nimport img3 from '../images/img3.jpg'\nimport img4 from '../images/img4.jpeg'\nimport img5 from '../images/img5.jpg'\nimport img2 from '../images/img6.jpg'\nimport img7 from '../images/img7.png'\nimport img8 from '../images/img8.jpg'\nimport { ADDCATEGORIES, ADDDATA, ADDTOCART } from './action'\n\nlet globalState: any = {\n    array: [\n        {\n            id: 1,\n            name: \"Gold1\",\n            price: \"1000\",\n            description: \"\",\n            image: img1,\n            count: 10\n        },\n        {\n            id: 2,\n            name: \"Gold2\",\n            price: \"2000\",\n            description: \"\",\n            image: img2,\n            count: 10\n        },\n        {\n            id: 3,\n            name: \"Gold3\",\n            price: \"3000\",\n            description: \"\",\n            image: img3,\n            count: 10\n        },\n        {\n            id: 4,\n            name: \"Gold4\",\n            price: \"4000\",\n            description: \"\",\n            image: img4,\n            count: 10\n        },\n        {\n            id: 5,\n            name: \"Gold5\",\n            price: \"5000\",\n            description: \"\",\n            image: img5,\n            count: 10\n        },\n        {\n            id: 6,\n            name: \"Gold6\",\n            price: \"4000\",\n            description: \"\",\n            image: img6,\n            count: 10\n        },\n        {\n            id: 7,\n            name: \"Gold7\",\n            price: \"7000\",\n            description: \"\",\n            image: img7,\n            count: 10\n        },\n        {\n            id: 8,\n            name: \"Gold8\",\n            price: \"3000\",\n            description: \"\",\n            image: img8,\n            count: 10\n        }\n    ],\n    cats: [],\n    categories: []\n}\n\nexport default function reducer(state = globalState, action: any) {\n    let table = [...state.array]\n    // let cart = [...state.cart]\n    let filteredArray = table.filter(a => a.id !== action.id)\n    switch (action.type) {\n        case \"INCREMENT\":\n            console.log(action);\n            const foundTable = table.find(item => (item.id) === parseInt(action.id))\n            foundTable && (foundTable.count = foundTable.count + 1)\n            return {\n                // array\n                // element: state[element]\n                ...state,\n                array: table\n            }\n        case \"REMOVE\":\n            return {\n                ...state,\n                array: filteredArray\n            }\n        case ADDCATEGORIES:\n            console.log(action)\n            return {\n                ...state,\n                categories: action.data\n            }\n        case ADDDATA:\n            return {\n                ...state,\n                cats: action.catData\n            }\n        case INCREMENTCATDATA:\n            const catsArray = [...state.cats]\n            catsArray.push(action.data)\n            return {\n                ...state,\n                cats: catsArray\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}